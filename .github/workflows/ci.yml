on: [pull_request]

name: Continuous integration

jobs:
  ci_linux:
    name: ci_on_linux
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up python
        uses: actions/setup-python@v2

      # clone and patch anki library  
      - name: Clone patch Anki
        run: sh ./scripts/clone_patch_anki
          
      # set up and run pre-commit pre-commit run --all-files
      - name: run pre-commit
        uses: pre-commit/action@v2.0.3
     
      # run build script to build
      - name: Build Ankisyncd
        run: |
          cargo build 
          cargo build --features tls

  ci_macos:
    name: ci_on_macos
    runs-on: macos-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Install protoc
      #   run: |
      #     /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      #     brew install protobuf
      
      - name: Set up python
        uses: actions/setup-python@v2

      # clone and patch anki library  
      - name: Clone patch Anki
        run: sh ./scripts/clone_patch_anki
          
      # set up and run pre-commit pre-commit run --all-files
      - name: run pre-commit
        uses: pre-commit/action@v2.0.3
     
      # run build script to build
      - name: Build Ankisyncd
        run: |
          cargo build 
          cargo build --features tls


  # it is necessary to separate windows ,as patch file differ  
  ci_windows:
    name: ci_on_windows
    runs-on: windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up cargo
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      
      # clone and patch anki library  
      - name: Clone patch Anki
        run: .\scripts\clone_patch_anki.bat
      
      # set up and run pre-commit pre-commit run --all-files
      - name: Set up python
        uses: actions/setup-python@v2
      - name: run pre-commit
        uses: pre-commit/action@v2.0.3

      # run build script to build
      - name: Build Ankisyncd
        run: |
          cargo build 
          cargo build --features tls

          


